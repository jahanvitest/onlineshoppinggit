#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="shop")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Inserttblpayment(tblpayment instance);
  partial void Updatetblpayment(tblpayment instance);
  partial void Deletetblpayment(tblpayment instance);
  partial void Inserttblotp(tblotp instance);
  partial void Updatetblotp(tblotp instance);
  partial void Deletetblotp(tblotp instance);
  partial void Insertreview(review instance);
  partial void Updatereview(review instance);
  partial void Deletereview(review instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["shopConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tblpayment> tblpayments
	{
		get
		{
			return this.GetTable<tblpayment>();
		}
	}
	
	public System.Data.Linq.Table<tblotp> tblotps
	{
		get
		{
			return this.GetTable<tblotp>();
		}
	}
	
	public System.Data.Linq.Table<review> reviews
	{
		get
		{
			return this.GetTable<review>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblpayment")]
public partial class tblpayment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Payment_Id;
	
	private System.Nullable<System.DateTime> _pay_date;
	
	private System.Nullable<int> _refproduct_id;
	
	private string _refemail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_IdChanging(int value);
    partial void OnPayment_IdChanged();
    partial void Onpay_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpay_dateChanged();
    partial void Onrefproduct_idChanging(System.Nullable<int> value);
    partial void Onrefproduct_idChanged();
    partial void OnrefemailChanging(string value);
    partial void OnrefemailChanged();
    #endregion
	
	public tblpayment()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Payment_Id
	{
		get
		{
			return this._Payment_Id;
		}
		set
		{
			if ((this._Payment_Id != value))
			{
				this.OnPayment_IdChanging(value);
				this.SendPropertyChanging();
				this._Payment_Id = value;
				this.SendPropertyChanged("Payment_Id");
				this.OnPayment_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_date", DbType="DateTime")]
	public System.Nullable<System.DateTime> pay_date
	{
		get
		{
			return this._pay_date;
		}
		set
		{
			if ((this._pay_date != value))
			{
				this.Onpay_dateChanging(value);
				this.SendPropertyChanging();
				this._pay_date = value;
				this.SendPropertyChanged("pay_date");
				this.Onpay_dateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refproduct_id", DbType="Int")]
	public System.Nullable<int> refproduct_id
	{
		get
		{
			return this._refproduct_id;
		}
		set
		{
			if ((this._refproduct_id != value))
			{
				this.Onrefproduct_idChanging(value);
				this.SendPropertyChanging();
				this._refproduct_id = value;
				this.SendPropertyChanged("refproduct_id");
				this.Onrefproduct_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refemail", DbType="VarChar(50)")]
	public string refemail
	{
		get
		{
			return this._refemail;
		}
		set
		{
			if ((this._refemail != value))
			{
				this.OnrefemailChanging(value);
				this.SendPropertyChanging();
				this._refemail = value;
				this.SendPropertyChanged("refemail");
				this.OnrefemailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblotp")]
public partial class tblotp : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _otp;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnotpChanging(int value);
    partial void OnotpChanged();
    #endregion
	
	public tblotp()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otp", DbType="Int NOT NULL")]
	public int otp
	{
		get
		{
			return this._otp;
		}
		set
		{
			if ((this._otp != value))
			{
				this.OnotpChanging(value);
				this.SendPropertyChanging();
				this._otp = value;
				this.SendPropertyChanged("otp");
				this.OnotpChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.review")]
public partial class review : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _f_id;
	
	private string _review1;
	
	private int _rate;
	
	private System.DateTime _date;
	
	private System.Nullable<int> _refproduct_id;
	
	private string _refemail;
	
	private System.Nullable<bool> _isachieve;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onf_idChanging(int value);
    partial void Onf_idChanged();
    partial void Onreview1Changing(string value);
    partial void Onreview1Changed();
    partial void OnrateChanging(int value);
    partial void OnrateChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onrefproduct_idChanging(System.Nullable<int> value);
    partial void Onrefproduct_idChanged();
    partial void OnrefemailChanging(string value);
    partial void OnrefemailChanged();
    partial void OnisachieveChanging(System.Nullable<bool> value);
    partial void OnisachieveChanged();
    #endregion
	
	public review()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int f_id
	{
		get
		{
			return this._f_id;
		}
		set
		{
			if ((this._f_id != value))
			{
				this.Onf_idChanging(value);
				this.SendPropertyChanging();
				this._f_id = value;
				this.SendPropertyChanged("f_id");
				this.Onf_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="review", Storage="_review1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string review1
	{
		get
		{
			return this._review1;
		}
		set
		{
			if ((this._review1 != value))
			{
				this.Onreview1Changing(value);
				this.SendPropertyChanging();
				this._review1 = value;
				this.SendPropertyChanged("review1");
				this.Onreview1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate", DbType="Int NOT NULL")]
	public int rate
	{
		get
		{
			return this._rate;
		}
		set
		{
			if ((this._rate != value))
			{
				this.OnrateChanging(value);
				this.SendPropertyChanging();
				this._rate = value;
				this.SendPropertyChanged("rate");
				this.OnrateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
	public System.DateTime date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refproduct_id", DbType="Int")]
	public System.Nullable<int> refproduct_id
	{
		get
		{
			return this._refproduct_id;
		}
		set
		{
			if ((this._refproduct_id != value))
			{
				this.Onrefproduct_idChanging(value);
				this.SendPropertyChanging();
				this._refproduct_id = value;
				this.SendPropertyChanged("refproduct_id");
				this.Onrefproduct_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refemail", DbType="VarChar(50)")]
	public string refemail
	{
		get
		{
			return this._refemail;
		}
		set
		{
			if ((this._refemail != value))
			{
				this.OnrefemailChanging(value);
				this.SendPropertyChanging();
				this._refemail = value;
				this.SendPropertyChanged("refemail");
				this.OnrefemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isachieve", DbType="Bit")]
	public System.Nullable<bool> isachieve
	{
		get
		{
			return this._isachieve;
		}
		set
		{
			if ((this._isachieve != value))
			{
				this.OnisachieveChanging(value);
				this.SendPropertyChanging();
				this._isachieve = value;
				this.SendPropertyChanged("isachieve");
				this.OnisachieveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
